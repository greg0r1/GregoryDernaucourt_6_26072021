{"mappings":"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","sources":["src/assets/js/classes/ViewVideo.js","src/assets/js/classes/ViewPicture.js","src/assets/js/classes/MediaFactory.js","src/assets/js/classes/ViewMedias.js","src/assets/js/classes/Lightbox.js","src/assets/js/classes/ModalForm.js","src/assets/js/main-photographer.js"],"sourcesContent":["/**\n *\n *\n * @export\n * @class ViewVideo\n */\nexport default class ViewVideo {\n    constructor({ name, id, firstName, title }) {\n        this.id = id\n        this.name = name\n        this.firstName = firstName\n        this.title = title\n    }\n    toString() {\n        return `\n        <video tabindex=\"0\" controls id=\"${this.id}\" class=\"video media\" alt=\"${this.title}\">\n            <source src=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\" type=\"video/mp4\">\n            <p>Votre navigateur ne supporte pas la vidéo HTML5. Voici à la place <a href=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\">le lien vers la vidéo</a>.</p>\n        </video>`\n    }\n}","import ViewMedias from \"./ViewMedias\";\n\nexport default class ViewPictures {\n    constructor({ name, id, firstName, title }) {\n        this.id = id\n        this.name = name\n        this.firstName = firstName\n        this.title = title\n    }\n    toString() {\n        return `\n        <img tabindex=\"0\" id=\"${this.id}\" alt=\"${this.title}\" class=\"image media\" src=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\">`\n    }\n}","import ViewVideo from \"./ViewVideo\";\nimport ViewPicture from \"./ViewPicture\";\n\nexport default class MediaFactory {\n    constructor(media, firstName) {\n        this.media = media;\n        this.firstName = firstName\n    }\n\n    create() {\n\n        if (this.media.video) {\n            return new ViewVideo({ name: this.media.video, id: this.media.id, firstName: this.firstName, title: this.media.title })\n        } else {\n            return new ViewPicture({ name: this.media.image, id: this.media.id, firstName: this.firstName, title: this.media.title })\n        }\n\n    }\n}","import MediaFactory from \"./MediaFactory\";\n\nexport default class ViewMedias {\n    constructor(medias, firstNameOfPhotographer) {\n        this.medias = medias;\n        this.firstNameOfPhotographer = firstNameOfPhotographer\n    }\n\n    render() {\n        const element = document.createElement(\"div\");\n        element.classList.add('container')\n        element.innerHTML = this.toString();\n        return element;\n    }\n\n    toString() {\n        return `\n            ${this.medias.map(({ image, video, title, likes, id }) => `\n            <figure class=\"content-media\">\n                <div class=\"content-media__media\">\n                    ${new MediaFactory({ image, video, id, title }, this.firstNameOfPhotographer).create().toString()}\n                </div>\n                <figcaption class=\"content-media__figcaption\">\n                    <span class=\"content-media__title\">${title}</span>\n                    <span>${likes} </span><span class=\"fas fa-heart\"></span>\n                </figcaption>\n            </figure>\n        `).join(\"\")}\n    `\n    }\n}\n","import MediaFactory from './MediaFactory';\n\n/**\n * @property {HTMLElement} element\n * @property {string} imageTitle\n * @property {string[]} images\n * @property {string} url Current image displayed\n * @export\n * @class Lightbox\n */\nexport default class Lightbox {\n    constructor(medias, firstNameOfPhotographer) {\n        this.medias = medias\n        this.path = firstNameOfPhotographer\n        this.index = 0\n        document.addEventListener('keyup', this.onKeyUp)\n        this.current = this.getCurrentMedia()\n    }\n\n    open(key) {\n        this.index = key\n        this.display()\n    }\n\n    close() {\n        const lightboxElement = document.querySelector('.lightbox-bg');\n        lightboxElement.classList.add('fadeout')\n        if (lightboxElement) {\n            window.setTimeout(() => {\n                lightboxElement.remove()\n            }, 500)\n        }\n    }\n\n    next() {\n        this.index += 1\n        if (this.index === this.medias.length) {\n            this.index = 0\n        }\n        this.display()\n    }\n\n    prev() {\n        this.index -= 1\n        if (this.index === -1) {\n            this.index = this.medias.length - 1\n        }\n        this.display()\n    }\n\n    getCurrentMedia() {\n        return this.medias[this.index]\n    }\n\n    display() {\n        const current = this.getCurrentMedia()\n        let element = document.querySelector('.lightbox-bg')\n        if (!element) {\n            element = document.createElement('div')\n            element.classList.add('lightbox-bg')\n            document.body.appendChild(element)\n            // Événements au clavier\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'ArrowRight') {\n                    this.next()\n                }\n            })\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'ArrowLeft') {\n                    this.prev()\n                }\n            })\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'Escape') {\n                    this.close()\n                }\n            })\n        }\n        element.innerHTML = `\n        <div role=\"dialog\" class=\"lightbox\" aria-label=\"image closeup view\">\n            <button aria-label=\"Close dialog\" class=\"lightbox__close\"></button>\n            <button aria-label=\"Next image\" class=\"lightbox__next\"></button>\n            <button aria-label=\"Previous image\" class=\"lightbox__prev\"></button>\n            <div class=\"lightbox__container\">\n                <figure>\n                    <div class=\"media\">\n                    ${new MediaFactory(current, this.path).create().toString()}\n                    </div>\n                    <figcaption>${current.title}</figcaption>\n                </figure>\n            </div>\n        </div >`\n\n        element.querySelector('.lightbox__next').addEventListener('click', this.next.bind(this))\n        element.querySelector('.lightbox__prev').addEventListener('click', this.prev.bind(this))\n        element.querySelector('.lightbox__close').addEventListener('click', this.close.bind(this))\n\n        element.setAttribute('height', window.innerHeight)\n\n    }\n}","import EventService from './EventService';\n\nexport default class ModalForm {\n    /**\n     * Creates an instance of ModalForm.\n     * @param {string} nameOfPhotographer\n     * @memberof ModalForm\n     */\n    constructor(nameOfPhotographer) {\n        this.nameOfPhotographer = nameOfPhotographer\n        this.init(this.nameOfPhotographer)\n    }\n\n    /**\n     * Modal display\n     *\n     * @param {String} nameOfPhotographer\n     * @memberof ModalForm\n     */\n    init(nameOfPhotographer) {\n        (document.querySelector('.bground')) ? EventService.closeModal() : this.display(nameOfPhotographer);\n        // Events de vérification sur les champs des formulaires\n        EventService.handleInputsFormClick((e) => this.checkField(e));\n        //On rend les éléments en arrière-plan inaccessible pour les lecteurs d'écran\n        document.getElementById('section').setAttribute('aria-hidden', 'true')\n        EventService.closeModal(document.querySelector('.bground .close'), document.querySelector('.bground'));\n    }\n\n    /**\n     * Check form fields\n     *\n     * @param {HTMLElement} element\n     * @memberof ModalForm\n     */\n    checkField(element) {\n        const regExName = \"[a-zA-Z-s\\u00C0-\\u024F\\u1E00-\\u1EFF]{3,}$\"; // Regex qui vérifie si le champ a plus de 3 caractères, les accents, et espaces des noms composés\n\n        if (element.id === \"first\") {\n            element.pattern = regExName;\n            if (!element.validity.valid) {\n                element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n                document.querySelector('.formData.first span').classList.add('error');\n                document.querySelector('.formData.first .error').textContent = 'Veuillez saisir un nom valide.'\n\n            } else {\n                element.removeAttribute(\"style\");\n                document.querySelector('.formData.first span').textContent = ''\n                document.querySelector('.formData.first span').classList.remove('error');\n            }\n        }\n        if (element.id === \"last\") {\n            element.pattern = regExName;\n            if (!element.validity.valid) {\n                element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n                document.querySelector('.formData.last span').classList.add('error');\n                document.querySelector('.formData.last .error').textContent = 'Veuillez saisir un nom valide.'\n            } else {\n                element.removeAttribute(\"style\");\n                document.querySelector('.formData.last span').textContent = ''\n                document.querySelector('.formData.last span').classList.remove('error');\n            }\n        }\n        if (element.id === \"email\") {\n            element.pattern = \"[a-z0-9-_]+[a-z0-9.-_]*@[a-z0-9-_]{2,}.[a-z.-_]+[a-z-_]+\"; // Regex qui vérifie si le champ a un email valide\n            if (!element.validity.valid) {\n                element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n                document.querySelector('.formData.email span').classList.add('error');\n                document.querySelector('.formData.email .error').textContent = 'Veuillez saisir un email valide.'\n            } else {\n                element.removeAttribute(\"style\");\n                document.querySelector('.formData.email span').textContent = ''\n                document.querySelector('.formData.email span').classList.remove('error');\n            }\n        }\n    }\n\n    /**\n     * Get fields values to display into console\n     * \n     * @param {Event} e\n     * @memberof ModalForm\n     */\n    submit(e) {\n        e.preventDefault();\n        for (let i = 0; i < document.forms[0].length - 1; i++) {\n            if (!document.forms[0][i].checkValidity() || document.forms[0][i].value === '') {\n                let id = document.forms[0][i].getAttribute('id')\n                let nameId = document.querySelector(`.formData.${id} label`).getInnerHTML()\n                alert('Veuillez saisir un ' + nameId)\n            } else {\n                console.info(document.forms[0][i].value)\n                if (i === document.forms[0].length - 2) {\n                    document.querySelector('.modal-body').innerHTML = '<p style=\"color:#FFF; text-align:center\">Merci</br>votre formulaire a bien été enregistré !';\n                    document.body.addEventListener('keyup', (evt) => {\n                        if (evt.key === 'Escape') {\n                            document.querySelector('.bground').remove()\n                        }\n                    });\n                    break\n                }\n            }\n        };\n    }\n\n    /**\n     * DOM render\n     *\n     * @param {String} nameOfPhotographer\n     * @memberof ModalForm\n     */\n    display(nameOfPhotographer) {\n        const div = document.createElement('div');\n        div.className = 'bground';\n\n        div.innerHTML = `\n          <div role=\"dialog\" class=\"modalContent\"\n          aria-labelledby=\"dialogTitle\"\n          aria-modal=\"true\">\n            <span role=\"button\" aria-label=\"Close Contact form\" class=\"close\" tabindex=\"0\"></span>\n            <div class=\"modal-body\">\n                <h1 id=\"dialogTitle\" aria-label=\"Contact me ${nameOfPhotographer}\" >Contactez-moi</br>\n                ${nameOfPhotographer}</h1>\n              <form id=\"contact\" action=\"\" method=\"get\">\n                <div class=\"formData first\">\n                  <label aria-label=\"First name\" for=\"first\">Prénom</label>\n                  <input class=\"text-control\" type=\"text\" id=\"first\" name=\"first\" aria-labelledby=\"first\"/>\n                  <span></span>\n                </div>\n                <div class=\"formData last\">\n                  <label aria-label=\"Last name\" for=\"last\">Nom</label>\n                  <input class=\"text-control\" type=\"text\" id=\"last\" name=\"last\" aria-labelledby=\"last\"/>\n                  <span></span>\n                </div>\n                <div class=\"formData email\">\n                  <label aria-label=\"email\" for=\"email\">E-mail</label>\n                  <input class=\"text-control\" type=\"email\" id=\"email\" name=\"email\" aria-labelledby=\"email\"/>\n                  <span></span>\n                </div>\n                <div class=\"formData message\">\n                  <label aria-label=\"Your message\" for=\"message\">Votre message</label>\n                  <textarea class=\"text-control\" type=\"text\" id=\"message\" name=\"message\" aria-labelledby=\"message\"></textarea>\n                  <span></span>\n                </div>\n                <div class=\"submit\">\n                    <input class=\"btn-submit button\" type=\"submit\" value=\"Envoyer\" aria-label=\"Send\"/>\n                </div>\n              </form>\n            </div>\n        </div>`;\n        document.getElementById('main').appendChild(div);\n        document.querySelector('form#contact input[type=submit]').addEventListener('click', (e) => this.submit(e));\n        document.getElementById('first').focus();\n    }\n}","// Model\nimport DataService from './classes/DataService';\nimport EventService from './classes/EventService';\nimport ViewMedias from './classes/ViewMedias';\nimport Lightbox from './classes/Lightbox';\nimport EventScrollToTop from './classes/EventScrollToTop'\nimport ModalForm from './classes/ModalForm'\n\n// View\n\nconst displayPhotographerInfos = (photographer, totalLikes) => {\n    const headerPhotographerInfosElement = document.querySelector('.photographerHeader');\n\n    headerPhotographerInfosElement.innerHTML = `\n        <div class=\"details\">\n            <h1 class=\"title\">${photographer.name}</h1>\n            <p class=\"localisation\">${photographer.country}, ${photographer.city}</p>\n            <p class=\"tagline\">${photographer.tagline}</p>\n            <div class=\"tags\" aria-label=\"Liste de tags concernant le photographe\">\n                <ul>\n                    ${photographer.tags.map((tag) => `\n                    <li class=\"tag\">\n                        <a title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">#${tag}</a>\n                    </li>\n                `).join(\"\")}\n                </ul>\n            </div>\n            <div class=\"info\">\n                <div class=\"likes\" arial-label=\"likes\">\n                    <span>${totalLikes}</span><span class=\"fas fa-heart\"></span>\n                </div>\n                <div class=\"price\">\n                    <span>${photographer.price}€ / jour</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"button\">\n            <button class=\"btn\">Contactez-moi</button>\n        </div>\n        <div class=\"img\" aria-label=\"Image\">\n            <img src=\"./assets/images/Sample_Photos/Photographers_ID_Photos/${photographer.portrait}\" alt=\"${photographer.name}\"\">\n        </div>\n        `\n}\n\nconst displayFilterButton = () => {\n    const filterButtonElement = document.querySelector('.filter');\n    filterButtonElement.innerHTML = `        \n        <p id=\"listbox1label\" role=\"label\">Trier par</p>\n        <div role=\"listbox\" id=\"listbox1\" class=\"btn-group dropdown show\">\n            <button class=\"btn dropdown-toggle\"\n            id=\"dropdownMenuLink\"\n            aria-labelledby=\"listbox1label\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"listbox\"\n            aria-activedescendant=\"listbox1-1\"\n            aria-expanded=\"true\">\n                <div role=\"option\" id=\"listbox1-1\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-1\" tabindex=\"0\">Popularité</a>\n                </div>\n                <span class=\"fas fa-chevron-down\" tabindex=\"0\"></span>\n            </button>\n            <div class=\"dropdown-menu\"\n            aria-labelledby=\"dropdownMenuLink\">\n                <div class=\"dropdown-divider\"></div>\n                <div role=\"option id=\"listbox1-2\" class=\"dropdown-item\"\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-2\" tabindex=\"0\">Date</a>\n                </div>\n                <div role=\"option id=\"listbox1-3\" class=\"dropdown-item\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-3\" tabindex=\"0\">Titre</a>\n                </div>\n            </div>\n        </div>\n    `\n}\n\n\n// Scripts\n\n/**\n * Ajoute un event au \"click\" à chaque \"tag\"\n *\n */\nfunction eventOnTags() {\n    // On ajoute l'événement \"click\" à chaque élément \"tag\"\n    EventService.handleTagClick((element) => {\n        const nameAttributeOfTag = element.getAttribute('title');\n        const url = new URL(`index.html?tag=${nameAttributeOfTag}`, window.location.href);\n        element.setAttribute('href', url.href)\n    });\n}\n\n/**\n * Gestionnaire de filtres pour le bouton dropdown\n *\n * @param {*} element\n * @param {*} dataService\n * @param {*} idFromUrlParams\n * @param {*} firstNameOfPhotographer\n * @param {*} medias\n */\nfunction filterMediasOnDropdownButton(element, dataService, idFromUrlParams, firstNameOfPhotographer, medias) {\n    document.querySelector(\".medias\").innerHTML = '';\n    if (element.textContent.trim() === \"Popularité\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByPopularity(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n    if (element.textContent.trim() === \"Date\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByDate(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n    if (element.textContent.trim() === \"Titre\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByTitle(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n}\n\n/**\n * Ajoute un event sur chaque médias pour la lightbox\n *\n * @param {Array} medias\n * @param {string} firstNameOfPhotographer\n */\nfunction eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer) {\n    const lightbox = new Lightbox(medias, firstNameOfPhotographer);\n    const mediasElements = Array.from(document.querySelectorAll('.video.media, .image.media'));\n    mediasElements.forEach(element => element.addEventListener('click', e => {\n        e.preventDefault();\n        const key = medias.findIndex(element => element.id == e.currentTarget.getAttribute('id'));\n        lightbox.open(key);\n    }\n    ));\n    mediasElements.forEach(element => element.addEventListener('keypress', e => {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            const key = medias.findIndex(element => element.id == e.currentTarget.getAttribute('id'));\n            lightbox.open(key);\n        }\n    }))\n}\n\n\n// Controller\n\nconst mainPhotographer = async () => {\n    try {\n        const dataService = new DataService();\n        dataService.loadPhotographers();// Récupération des photographes\n        dataService.loadMedias();// Récupération de l'ensemble des médias des photographes\n\n        // On display le photographe avec ses infos grâce à son id récupéré dans l'url\n        const paramsFromUrl = new URLSearchParams(document.location.search.substring(1));\n        const idFromUrlParams = Number(paramsFromUrl.get(\"id\"));\n        const nameOfPhotographer = dataService.getPhotographerById(idFromUrlParams).name;\n        const firstNameOfPhotographer = nameOfPhotographer.slice(0, nameOfPhotographer.indexOf(' '));\n        const medias = dataService.getMediasByPhotographerId(idFromUrlParams);\n        displayPhotographerInfos(dataService.getPhotographerById(idFromUrlParams), dataService.getTotalOfLikes(idFromUrlParams));\n\n        // On ajoute les events sur les tags (renvoient sur la page index avec le résultat)\n        eventOnTags();\n\n        // Event sur bouton contact\n        document.querySelector('.photographerHeader .button').addEventListener('click', () => new ModalForm(nameOfPhotographer));\n\n        //On affiche le bouton de filtre, avec l'event toggle\n        displayFilterButton();\n        const chevronElement = document.querySelector(\".dropdown-toggle .fas\");\n        EventService.toggleDropdownButton(chevronElement);\n        EventService.handleMediasFilter((element) => filterMediasOnDropdownButton(element, dataService, idFromUrlParams, firstNameOfPhotographer, medias));// Gestionnaire de filtres des médias\n\n        //On affiche les médias du photographes\n        document.querySelector(\".medias\").appendChild(new ViewMedias(medias, firstNameOfPhotographer).render());\n\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)//Events sur chaque image pour afficher la lightbox\n\n        // On ajoute un événement au scroll de Window pour afficher un bouton scroll to top\n        window.addEventListener('scroll', () => EventScrollToTop.scrollToTop(document.querySelector('.scrollToMainButton')));\n\n        // On ajoute le nom du photographe au titre\n        document.title = `Fisheye | ${nameOfPhotographer}`;\n\n    } catch (error) {\n\n        console.error(error)\n\n    }\n};\nmainPhotographer();"],"names":["$32b4fa86f6a10e3d$export$9099ad97b570f7c","toString","this","id","title","firstName","name","$eafa99b51a82fc34$export$9099ad97b570f7c","$02c42a7379c9508d$export$9099ad97b570f7c","create","media","video","image","$4be4b7ca8119984a$export$9099ad97b570f7c","render","element","document","createElement","classList","add","innerHTML","medias","map","likes","firstNameOfPhotographer","join","$7bccf615f3cbf77c$export$9099ad97b570f7c","open","key","index","display","close","lightboxElement","querySelector","window","setTimeout","remove","next","length","prev","getCurrentMedia","current","body","appendChild","addEventListener","evt","path","bind","setAttribute","innerHeight","onKeyUp","$43aa8d02914f4e23$export$9099ad97b570f7c","init","nameOfPhotographer","$gMLik","default","closeModal","handleInputsFormClick","e","checkField","getElementById","regExName","pattern","validity","valid","removeAttribute","textContent","submit","preventDefault","i","forms","checkValidity","value","console","info","getAttribute","nameId","getInnerHTML","alert","div","className","focus","constructor","$6474f89d5989e90f$var$eventOpenLightboxOnMediasElements","lightbox","mediasElements","Array","from","querySelectorAll","forEach","findIndex","element1","currentTarget","async","dataService","$1IXKx","loadPhotographers","loadMedias","paramsFromUrl","URLSearchParams","location","search","substring","idFromUrlParams","Number","get","getPhotographerById","slice","indexOf","getMediasByPhotographerId","photographer","totalLikes","getTotalOfLikes","country","city","tagline","tags","tag","price","portrait","handleTagClick","nameAttributeOfTag","url","URL","href","chevronElement","toggleDropdownButton","handleMediasFilter","trim","getMediasPhotographerByPopularity","getMediasPhotographerByDate","getMediasPhotographerByTitle","$6474f89d5989e90f$var$filterMediasOnDropdownButton","$gsUaF","scrollToTop","error","$6474f89d5989e90f$var$mainPhotographer"],"version":3,"file":"photographer.27cc596a.js.map"}
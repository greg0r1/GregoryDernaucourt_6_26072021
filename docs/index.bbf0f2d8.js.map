{"mappings":"ysBACA,IAAAA,EAAAC,EAAAC,EAAA,UACAC,EAAAF,EAAAC,EAAA,UACAE,EAAAH,EAAAC,EAAA,6DAGa,IAAIG,EAAAA,QAAjB,MAiBMC,EAAoB,WAA2B,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,GACjD,MAAMG,EAAUC,SAASC,eAAT,WAChBF,EAAQG,UAAR,gBACA,MAAMC,EAAkB,IAAIC,IAAJ,uDAAgEC,UACxFN,EAAQO,UAAR,gHAAAC,OAMMZ,EAAca,KAAIC,IAAA,IAAAC,SAAGA,EAAFC,KAAYA,EAAZC,KAAkBA,EAAlBC,QAAwBA,EAAxBC,QAAiCA,EAAjCC,MAA0CA,EAA1CC,KAAiDA,GAAjDP,4LAADF,OAIqBJ,EAAkBO,EAJvC,mCAAAH,OAIiFI,EAJjF,iFAAAJ,OAMuBI,EANvB,wGAAAJ,OAScK,EATd,MAAAL,OASuBM,EATvB,iDAAAN,OAUaO,EAVb,2CAAAP,OAWOQ,EAXP,0GAAAR,OAeVS,EAAKR,KAAKS,GAAD,2CAAAV,OACaU,EADb,qEAAAV,OAEJU,EAFI,eAEYC,KAFrB,IAAA,wDAKZA,KApBI,IAAA,+BAkCV,SACSC,EAAYC,EAAaH,GAE9BI,EAAAA,QAAaC,gBAAgBC,IACzB,MAAMC,EAAqBD,EAAQE,aAAR,SACrBC,EAAsBN,EAAYO,uBAAuBH,GAC/D9B,EAAqBgC,GACrBP,EAAYC,GAEZQ,EAA+BR,GAE/BpB,SAAS6B,MAAT,aAAAtB,OAA8BiB,EAAmBM,OAAO,GAAGC,eAA3DxB,OAA2EiB,EAAmBQ,MAAM,OAS5G,SACSJ,EAA+BR,GAEpCC,EAAAA,QAAaY,6BAA6BV,IACtC,MAAMW,EAAqBX,EAAQY,YAAYC,OACzCC,EAA0BH,EAAmBF,MAAM,EAAGE,EAAmBI,QAAnB,MACtDC,EAAKnB,EAAYoB,sBAAsBN,GAAoBK,GAC3DE,EAAM,IAAIrC,IAAJ,wBAAAG,OAAgCgC,EAAGG,WAAH,eAAhCnC,OAA2D8B,GAA2BhC,UAClGkB,EAAQoB,aAAR,OAA6BF,MAuCtBG,IAAAA,EA/BQC,eAGf,MAAMzB,EAAc,IAAI3B,EAAAA,QAExB2B,EAAY0B,oBAEZ1B,EAAY2B,aArGI/B,EAuGDI,EAAY4B,UArG/BhD,SAASiD,cAAT,UAAiC3C,WAAjC,2EAAAC,OAGUS,EAAKR,KAAKS,GAAD,2CAAAV,OACiBU,EADjB,yEAAAV,OAEIU,EAAIa,OAAO,GAAGC,eAFlBxB,OAEkCU,EAAIe,MAAM,GAAV,mDAEtCd,KAJL,IAAA,6BAsGN,MACMD,EADS,IAAIiC,gBAAgBlD,SAASK,SAAS8C,OAAOC,UAAU,IACnDC,IAAP,OACZ3D,EAAqB0B,EAAYO,uBAAuBV,IAExDqC,OAAOC,iBAAP,UAAA,IAAwCC,EAAAA,QAAiBC,YAAYzD,SAASiD,cAAT,0BAErE9B,EAAYC,GAEZQ,EAA+BR,GAnBnC,MAsBSsC,GAELC,QAAQD,MAAMA,GAxHF,IAAI1C,GA6HT4B,0BCtIf,SAAAtD,EAAA","sources":["src/assets/js/main-photographers.js","src/assets/js/index.js"],"sourcesContent":["// Model\nimport DataService from './classes/DataService';\nimport EventService from './classes/EventService';\nimport EventScrollToTop from './classes/EventScrollToTop';\n// import images from 'url:../../../src/assets/images/Sample_Photos/Photographers_ID_Photos/*.jpg';\n\nconst data = new DataService;\n\n// View\nconst displayNavTags = (tags) => {\n    // On affiche la nav avec les tags\n    document.querySelector('header').innerHTML += `\n        <nav class=\"nav\">\n            <ul class=\"tags\">\n            ${tags.map((tag) => `\n                <a class=\"tag\" title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">\n                    <li>#${tag.charAt(0).toUpperCase()}${tag.slice(1)}</li>\n                </a>\n                `).join(\"\")}\n            </ul></nav>`\n\n}\n\nconst displayPhotographers = (photographers = []) => {\n    const section = document.getElementById('section');\n    section.classList = \"photographers\";\n    const urlToPathImages = new URL('assets/images/Sample_Photos/Photographers_ID_Photos/', location);\n    section.innerHTML = `\n    <header>\n        <h1>Nos photographes</h1>\n    </header>\n        <div class=\"container\">\n\n        ${photographers.map(({ portrait, name, city, country, tagline, price, tags }) =>\n        `<article class=\"article\" tabindex=\"0\">\n            <a class=\"link-to-photographer\">\n                <div class=\"article__img\">\n                    <img src=\"data:image/jpeg, ${urlToPathImages + portrait}\" alt=\"Portrait du photographe ${name}\">\n                </div>\n                <h2 class=\"article__title title\">${name}</h2>\n            </a>\n            <div class=\"details\">\n                <p class=\"localisation\">${city}, ${country}</p>\n                <p class=\"description\">${tagline}</p>\n                <p class=\"price\">${price}€/jour</p>\n            </div>\n            <div class=\"tags\">\n                <ul>\n                ${tags.map((tag) => `\n                <a class=\"tag\" title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">\n                <li>#${tag}</li></a>`).join(\"\")}\n                </ul></div></article>\n        `\n    ).join(\"\")\n        }\n        </div>\n        `\n}\n\n\n\n// Scripts\n\n/**\n * Fonction pour gérer l'événement des tags\n *\n * @param {*} dataService\n */\nfunction eventOnTags(dataService, tag) {\n    // On ajoute l'événement \"click\" à l'élément \"tag\"\n    EventService.handleTagClick((element) => {\n        const nameAttributeOfTag = element.getAttribute('title');\n        const photographersByTags = dataService.getPhotographersByTags(nameAttributeOfTag);\n        displayPhotographers(photographersByTags);\n        eventOnTags(dataService);\n        // eventOnTags(dataService);\n        eventCickOnPhotographerProfile(dataService);\n        // On ajoute le tag au titre\n        document.title = `Fisheye | ${nameAttributeOfTag.charAt(0).toUpperCase()}${nameAttributeOfTag.slice(1)}`;\n    });\n}\n\n/**\n * Fonction pour gérer l'événement clique de chaque fiche\n * de photographess\n *\n * @param {*} dataService\n */\nfunction eventCickOnPhotographerProfile(dataService) {\n    // On ajoute l'événement au \"click\" à chaque fiche de photographes\n    EventService.handlePhotographerSelection((element) => {\n        const nameOfPhotographer = element.textContent.trim();\n        const firstNameOfPhotographer = nameOfPhotographer.slice(0, nameOfPhotographer.indexOf(' '));\n        const id = dataService.getPhotographerByName(nameOfPhotographer).id;\n        const url = new URL(`photographer.html?id=${id.toString()}&firstName=${firstNameOfPhotographer}`, location);\n        element.setAttribute('href', url);\n    });\n}\n\n\n\n\n// Controller\nconst mainPhotographers = async () => {\n\n    try {\n        const dataService = new DataService();\n        // On récupère l'ensemble des photographes du Json\n        dataService.loadPhotographers();\n        // On récupère l'ensemble des médias des photographes du Json\n        dataService.loadMedias();\n        // On affiche la nav en récupérant tous les tags utilisés (getTags())\n        displayNavTags(dataService.getTags());\n        // On affiche les photographes en commençant par récupérer un paramètre dans l'url:\n        // s'il y a un tag dans l'url, alors on affiche une séléction par le tag transmis,\n        // sinon tous les photographes sont affichés\n        const params = new URLSearchParams(document.location.search.substring(1));\n        const tag = params.get(\"tag\");\n        displayPhotographers(dataService.getPhotographersByTags(tag));\n        // On ajoute un événement au scroll de window pour afficher un bouton scroll to top\n        window.addEventListener('scroll', () => EventScrollToTop.scrollToTop(document.querySelector('.scrollToMainButton')));\n        // On ajoute l'événement \"click\" à l'élément \"tag\"\n        eventOnTags(dataService);\n        // On ajoute l'événement \"click\" à chaque fiche de photographes\n        eventCickOnPhotographerProfile(dataService);\n\n\n    } catch (error) {\n\n        console.error(error)\n\n    }\n\n};\nexport default mainPhotographers();\n\n","import mainPhotographers from './main-photographers';\n"],"names":["$40f5319b03a78a93$var$_DataService","$40f5319b03a78a93$var$_interopRequireDefault","parcelRequire","$40f5319b03a78a93$var$_EventService","$40f5319b03a78a93$var$_EventScrollToTop","DataService","displayPhotographers","photographers","arguments","length","undefined","section","document","getElementById","classList","urlToPathImages","URL","location","innerHTML","concat","map","_ref","portrait","name","city","country","tagline","price","tags","tag","join","eventOnTags","dataService","EventService","handleTagClick","element","nameAttributeOfTag","getAttribute","photographersByTags","getPhotographersByTags","eventCickOnPhotographerProfile","title","charAt","toUpperCase","slice","handlePhotographerSelection","nameOfPhotographer","textContent","trim","firstNameOfPhotographer","indexOf","id","getPhotographerByName","url","toString","setAttribute","mainPhotographers","async","loadPhotographers","loadMedias","getTags","querySelector","URLSearchParams","search","substring","get","window","addEventListener","EventScrollToTop","scrollToTop","error","console"],"version":3,"file":"index.bbf0f2d8.js.map"}
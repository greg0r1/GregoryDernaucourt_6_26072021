{"mappings":"grBACA,IAAAA,EAAAC,EAAAC,EAAA,UACAC,EAAAF,EAAAC,EAAA,UACAE,EAAAH,EAAAC,EAAA,6DACa,IAAIG,EAAAA,QAAjB,MAiBMC,EAAoB,WAA2B,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,GACjD,MAAMG,EAAUC,SAASC,eAAT,WAChBF,EAAQG,UAAR,gBACAH,EAAQI,UAAR,4IAAAC,OAMMT,EAAcU,KAAIC,IAAA,IAAAC,GAAGA,EAAFC,SAAMA,EAANC,KAAgBA,EAAhBC,KAAsBA,EAAtBC,QAA4BA,EAA5BC,QAAqCA,EAArCC,MAA8CA,EAA9CC,KAAqDA,GAArDR,SACrBS,EAAOR,EAAIC,EAAUC,IAAf,mGAANL,OAE+DK,EAF/D,iFAAAL,OAIuBG,EAJvB,kOAAAH,OAS2CK,EAT3C,wGAAAL,OAYkCM,EAZlC,MAAAN,OAY2CO,EAZ3C,iDAAAP,OAaiCQ,EAbjC,2CAAAR,OAc2BS,EAd3B,0GAAAT,OAkBUU,EAAKT,KAAKW,GAAD,6EAAAZ,OAESY,EAFT,+CAAAZ,OAE0DY,EAF1D,qCAGCC,KAHV,IAAA,gFAQZA,KA3BI,IAAA,+BAwCV,SACSC,EAAYC,GAEjBC,EAAAA,QAAaC,gBAAgBC,IACzB,MAAMC,EAAqBD,EAAQE,aAAR,SACrBC,EAAsBN,EAAYO,uBAAuBH,GAC/D7B,EAAqB+B,GACrBP,EAAYC,GAEZQ,EAA+BR,GAE/BnB,SAAS4B,MAAT,aAAAxB,OAA8BmB,EAAmBM,OAAO,GAAGC,eAA3D1B,OAA2EmB,EAAmBQ,MAAM,OAU5G,SACShB,EAAOR,EAAIC,EAAUC,GAC1B,MAAMuB,EAAM,IAAIC,MAChBD,EAAIE,OAAJ,KACIlC,SAASC,eAAeM,GAAI4B,IAAMH,EAAIG,IACtCnC,SAASC,eAAeM,GAAI6B,IAA5B,2BAA+D3B,EAC/DT,SAASC,eAAeM,GAAI8B,gBAA5B,UAEJL,EAAIG,IAAJ,uDAAmE3B,EAOvE,SACSmB,EAA+BR,GACpCC,EAAAA,QAAakB,6BAA6BhB,IACtC,MAAMiB,EAAqBjB,EAAQkB,YAAYC,OACzCC,EAA0BH,EAAmBR,MAAM,EAAGQ,EAAmBI,QAAnB,MACtDpC,EAAKY,EAAYyB,sBAAsBL,GAAoBhC,GAC3DsC,EAAM,IAAIC,IAAJ,wBAAA1C,OAAgCG,EAAGwC,WAAH,eAAhC3C,OAA2DsC,GAA2BM,UAClG1B,EAAQ2B,aAAR,OAA6BJ,MAsCtBK,IAAAA,EA/BQC,eAGf,MAAMhC,EAAc,IAAI1B,EAAAA,QAExB0B,EAAYiC,oBAEZjC,EAAYkC,aAvHIvC,EAyHDK,EAAYmC,UAxH/BtD,SAASuD,cAAT,UAAiCpD,WAAjC,gHAAAC,OAGUU,EAAKT,KAAKW,GAAD,qEAAAZ,OAESY,EAFT,+CAAAZ,OAE0DY,EAAIa,OAAO,GAAGC,eAFxE1B,OAEwFY,EAAIe,MAAM,GAAV,iCACvFd,KAHV,IAAA,uCAyHN,MACMD,EADS,IAAIwC,gBAAgBxD,SAASgD,SAASS,OAAOC,UAAU,IACnDC,IAAP,OACZjE,EAAqByB,EAAYO,uBAAuBV,IAExD4C,OAAOC,iBAAP,UAAA,IAAwCC,EAAAA,QAAiBC,YAAY/D,SAASuD,cAAT,0BAErErC,EAAYC,GAEZQ,EAA+BR,GAnBnC,MAsBS6C,GAELC,QAAQD,MAAMA,GA1IF,IAAIlD,GA+IToC,0BCvJf,SAAA5D,EAAA","sources":["src/assets/js/main-photographers.js","src/assets/js/index.js"],"sourcesContent":["// Model\nimport DataService from './classes/DataService';\nimport EventService from './classes/EventService';\nimport EventScrollToTop from './classes/EventScrollToTop';\nconst data = new DataService;\n\n\n// View\nconst displayNavTags = (tags) => {\n    document.querySelector('header').innerHTML += `\n        <nav class=\"nav\" aria-label=\"Photographer categories\">\n            <ul class=\"tags\">\n            ${tags.map((tag) => `\n                <li class=\"tag\">\n                    <a title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">#${tag.charAt(0).toUpperCase()}${tag.slice(1)}</a>\n                </li>`).join(\"\")}\n            </ul>\n        </nav>`\n\n}\n\nconst displayPhotographers = (photographers = []) => {\n    const section = document.getElementById('section');\n    section.classList = \"photographers\";\n    section.innerHTML = `\n    <header aria-label=\"Section header\">\n        <h1>Nos photographes</h1>\n    </header>\n        <div class=\"container\">\n\n        ${photographers.map(({ id, portrait, name, city, country, tagline, price, tags }) =>\n        loader(id, portrait, name) ||\n        `<article class=\"article\">\n            <a class=\"link-to-photographer\" tabindex=\"0\" aria-label=\"${name}\">\n                <div class=\"article__img\">\n                    <img id=\"${id}\" src=\"/../../assets/images/loader.svg\" style=\"\n                    width: 50px;\n                    height: 50px;\n                \" alt=\"\">\n                    </div>\n                <h2 class=\"article__title title\">${name}</h2>\n            </a>\n            <div class=\"details\">\n                <p class=\"localisation\">${city}, ${country}</p>\n                <p class=\"description\">${tagline}</p>\n                <p class=\"price\">${price}€/jour</p>\n            </div>\n            <div class=\"tags\">\n                <ul>\n                ${tags.map((tag) => `\n                    <li class=\"tag\">\n                        <a title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">#${tag}</a>\n                    </li>`).join(\"\")}\n                </ul>\n            </div>\n        </article>\n        `\n    ).join(\"\")\n        }\n        </div>\n        `\n}\n\n\n// Scripts\n\n/**\n * Fonction pour gérer l'événement des tags\n *\n * @param {object} dataService\n */\nfunction eventOnTags(dataService) {\n    // On ajoute l'événement \"click\" à l'élément \"tag\"\n    EventService.handleTagClick((element) => {\n        const nameAttributeOfTag = element.getAttribute('title');\n        const photographersByTags = dataService.getPhotographersByTags(nameAttributeOfTag);\n        displayPhotographers(photographersByTags);\n        eventOnTags(dataService);\n        // eventOnTags(dataService);\n        eventCickOnPhotographerProfile(dataService);\n        // On ajoute le tag au titre\n        document.title = `Fisheye | ${nameAttributeOfTag.charAt(0).toUpperCase()}${nameAttributeOfTag.slice(1)}`;\n    });\n}\n\n/**\n * Waiting loaded image\n *\n * @param {number} id\n * @param {string} portrait\n * @param {string} name\n */\nfunction loader(id, portrait, name) {\n    const img = new Image();\n    img.onload = () => {\n        document.getElementById(id).src = img.src;\n        document.getElementById(id).alt = 'Portrait du photographe ' + name;\n        document.getElementById(id).removeAttribute('style')\n    };\n    img.src = 'assets/images/Sample_Photos/Photographers_ID_Photos/' + portrait;\n}\n\n/**\n * Add the event to the \"click\" to each photographers file\n *\n * @param {object} dataService\n */\nfunction eventCickOnPhotographerProfile(dataService) {\n    EventService.handlePhotographerSelection((element) => {\n        const nameOfPhotographer = element.textContent.trim();\n        const firstNameOfPhotographer = nameOfPhotographer.slice(0, nameOfPhotographer.indexOf(' '));\n        const id = dataService.getPhotographerByName(nameOfPhotographer).id;\n        const url = new URL(`photographer.html?id=${id.toString()}&firstName=${firstNameOfPhotographer}`, location);\n        element.setAttribute('href', url);\n    });\n}\n\n\n// Controller\n\nconst mainPhotographers = async () => {\n\n    try {\n        const dataService = new DataService();\n        // On récupère l'ensemble des photographes du Json\n        dataService.loadPhotographers();\n        // On récupère l'ensemble des médias des photographes du Json\n        dataService.loadMedias();\n        // On affiche la nav en récupérant tous les tags utilisés (getTags())\n        displayNavTags(dataService.getTags());\n        // On affiche les photographes en commençant par récupérer un paramètre dans l'url:\n        // s'il y a un tag dans l'url, alors on affiche une séléction par le tag transmis,\n        // sinon tous les photographes sont affichés\n        const params = new URLSearchParams(document.location.search.substring(1));\n        const tag = params.get(\"tag\");\n        displayPhotographers(dataService.getPhotographersByTags(tag));\n        // On ajoute un événement au scroll de window pour afficher un bouton scroll to top\n        window.addEventListener('scroll', () => EventScrollToTop.scrollToTop(document.querySelector('.scrollToMainButton')));\n        // On ajoute l'événement \"click\" à l'élément \"tag\"\n        eventOnTags(dataService);\n        // On ajoute l'événement \"click\" à chaque fiche de photographes\n        eventCickOnPhotographerProfile(dataService);\n\n\n    } catch (error) {\n\n        console.error(error)\n\n    }\n\n};\nexport default mainPhotographers();\n\n","import mainPhotographers from './main-photographers';\n"],"names":["$f7a970df03558f65$var$_DataService","$f7a970df03558f65$var$_interopRequireDefault","parcelRequire","$f7a970df03558f65$var$_EventService","$f7a970df03558f65$var$_EventScrollToTop","DataService","displayPhotographers","photographers","arguments","length","undefined","section","document","getElementById","classList","innerHTML","concat","map","_ref","id","portrait","name","city","country","tagline","price","tags","loader","tag","join","eventOnTags","dataService","EventService","handleTagClick","element","nameAttributeOfTag","getAttribute","photographersByTags","getPhotographersByTags","eventCickOnPhotographerProfile","title","charAt","toUpperCase","slice","img","Image","onload","src","alt","removeAttribute","handlePhotographerSelection","nameOfPhotographer","textContent","trim","firstNameOfPhotographer","indexOf","getPhotographerByName","url","URL","toString","location","setAttribute","mainPhotographers","async","loadPhotographers","loadMedias","getTags","querySelector","URLSearchParams","search","substring","get","window","addEventListener","EventScrollToTop","scrollToTop","error","console"],"version":3,"file":"index.aac960ef.js.map"}
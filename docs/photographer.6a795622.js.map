{"mappings":"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","sources":["src/assets/js/main-photographer.js","src/assets/js/classes/ViewMedias.js","src/assets/js/classes/MediaFactory.js","src/assets/js/classes/ViewVideo.js","src/assets/js/classes/ViewPicture.js","src/assets/js/classes/Lightbox.js"],"sourcesContent":["// Model\nimport DataService from './classes/DataService';\nimport EventService from './classes/EventService';\nimport ViewMedias from './classes/ViewMedias';\nimport Lightbox from './classes/Lightbox';\nimport EventScrollToTop from './classes/EventScrollToTop'\n\n// View\n\nconst displayPhotographerInfos = (photographer, totalLikes) => {\n    const headerPhotographerInfosElement = document.querySelector('.photographerHeader');\n\n    headerPhotographerInfosElement.innerHTML = `\n        <div class=\"details\">\n            <h1 class=\"title\">${photographer.name}</h1>\n            <p class=\"localisation\">${photographer.country}, ${photographer.city}</p>\n            <p class=\"tagline\">${photographer.tagline}</p>\n            <div class=\"tags\" aria-label=\"Liste de tags concernant le photographe\">\n                <ul>\n                    ${photographer.tags.map((tag) => `\n                    <li class=\"tag\">\n                        <a title=\"${tag}\" href=\"javascript:void(0);\" tabindex=\"0\">#${tag}</a>\n                    </li>\n                `).join(\"\")}\n                </ul>\n            </div>\n            <div class=\"info\">\n                <div class=\"likes\" arial-label=\"Total number of photographer likes\">\n                    <span>${totalLikes}</span><span class=\"fas fa-heart\"></span>\n                </div>\n                <div class=\"price\">\n                    <span>${photographer.price}€ / jour</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"button\">\n            <button class=\"btn\">Contactez-moi</button>\n        </div>\n        <div class=\"img\" aria-label=\"Image\">\n            <img src=\"./assets/images/Sample_Photos/Photographers_ID_Photos/${photographer.portrait}\" alt=\" alt=\"Portrait du photographe ${photographer.name}\"\">\n        </div>\n        `\n}\n\nconst displayFilterButton = () => {\n    const filterButtonElement = document.querySelector('.filter');\n    filterButtonElement.innerHTML = `        \n        <p id=\"listbox1label\" role=\"label\">Trier par</p>\n        <div role=\"listbox\" id=\"listbox1\" class=\"btn-group dropdown show\">\n            <button class=\"btn dropdown-toggle\"\n            id=\"dropdownMenuLink\"\n            aria-labelledby=\"listbox1label\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"listbox\"\n            aria-activedescendant=\"listbox1-1\"\n            aria-expanded=\"true\">\n                <div role=\"option\" id=\"listbox1-1\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-1\" tabindex=\"0\">Popularité</a>\n                </div>\n                <span class=\"fas fa-chevron-down\" tabindex=\"0\"></span>\n            </button>\n            <div class=\"dropdown-menu\"\n            aria-labelledby=\"dropdownMenuLink\">\n                <div class=\"dropdown-divider\"></div>\n                <div role=\"option id=\"listbox1-2\" class=\"dropdown-item\"\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-2\" tabindex=\"0\">Date</a>\n                </div>\n                <div role=\"option id=\"listbox1-3\" class=\"dropdown-item\">\n                    <a href=\"javascript:void(0);\" role=\"listbox\" id=\"listbox1-3\" tabindex=\"0\">Titre</a>\n                </div>\n            </div>\n        </div>\n    `\n}\n\nconst displayModalForm = (name) => {\n    const div = document.createElement('div');\n    div.className = 'bground';\n\n    div.innerHTML = `\n      <div role=\"dialog\" class=\"modalContent\"\n      aria-labelledby=\"dialogTitle\"\n      aria-modal=\"true\">\n        <span role=\"button\" aria-label=\"Close Contact form\" class=\"close\"></span>\n        <div class=\"modal-body\">\n            <h1 id=\"dialogTitle\" aria-label=\"Contact me ${name}\" >Contactez-moi</br>\n            ${name}</h1>\n          <form id=\"contact\" action=\"\" method=\"get\">\n            <div class=\"formData\">\n              <label aria-label=\"First name\" id=\"first\" for=\"first\">Prénom</label>\n              <input class=\"text-control\" type=\"text\" id=\"first\" name=\"first\" aria-labelledby=\"first\"/><br>\n              <span class=\"error\"></span>\n            </div>\n            <div class=\"formData\">\n              <label aria-label=\"Last name\" id=\"last\" for=\"last\">Nom</label>\n              <input class=\"text-control\" type=\"text\" id=\"last\" name=\"last\" aria-labelledby=\"last\"/><br>\n              <span class=\"error\"></span>\n            </div>\n            <div class=\"formData\">\n              <label aria-label=\"email\" id=\"email\" for=\"email\">E-mail</label>\n              <input class=\"text-control\" type=\"email\" id=\"email\" name=\"email\" aria-labelledby=\"email\"/><br>\n              <span class=\"error\"></span>\n            </div>\n            <div class=\"formData\">\n              <label aria-label=\"Your message\" id=\"message\" for=\"message\">Votre message</label>\n              <textarea class=\"text-control\" type=\"text\" id=\"message\" name=\"message\" aria-labelledby=\"message\"></textarea>\n              <br>\n              <span class=\"error\"></span>\n            </div>\n            <div class=\"submit\">\n                <input class=\"btn-submit button\" type=\"submit\" value=\"Envoyer\" aria-label=\"Send\"/>\n            </div>\n          </form>\n        </div>\n    </div>`;\n    document.getElementById('main').appendChild(div);\n    document.querySelector('form#contact input[type=submit]').addEventListener('click', (e) => getValuesForm(e));\n    document.getElementById('first').focus();\n}\n\n\n// Scripts\n/**\n *\n *\n * @param {*} data\n */\nfunction eventOnTags() {\n    // On ajoute l'événement \"click\" à chaque élément \"tag\"\n    EventService.handleTagClick((element) => {\n        const nameAttributeOfTag = element.getAttribute('title');\n        const url = new URL(`index.html?tag=${nameAttributeOfTag}`, window.location.href);\n        element.setAttribute('href', url.href)\n    });\n}\n\nfunction filterMediasOnDropdownButton(element, dataService, idFromUrlParams, firstNameOfPhotographer, medias) {\n    document.querySelector(\".medias\").innerHTML = '';\n    if (element.textContent.trim() === \"Popularité\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByPopularity(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n    if (element.textContent.trim() === \"Date\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByDate(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n    if (element.textContent.trim() === \"Titre\") {\n        document.querySelector(\".medias\").appendChild(new ViewMedias(dataService.getMediasPhotographerByTitle(idFromUrlParams), firstNameOfPhotographer).render());\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n    }\n}\n\nfunction eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer) {\n    const lightbox = new Lightbox(medias, firstNameOfPhotographer);\n    const mediasElements = Array.from(document.querySelectorAll('.video.media, .image.media'));\n    mediasElements.forEach(element => element.addEventListener('click', e => {\n        e.preventDefault();\n        const key = medias.findIndex(element => element.id == e.currentTarget.getAttribute('id'));\n        lightbox.open(key);\n    }\n    ));\n    mediasElements.forEach(element => element.addEventListener('keypress', e => {\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            const key = medias.findIndex(element => element.id == e.currentTarget.getAttribute('id'));\n            lightbox.open(key);\n        }\n    }))\n}\n\n/**\n * Fonction qui affiche le formulaire de contact\n *\n * @param {*} nameOfPhotographer\n */\nfunction eventDisplayModalForm(nameOfPhotographer) {\n\n    (document.querySelector('.bground')) ? EventService.closeModal() : displayModalForm(nameOfPhotographer);\n    EventService.closeModal(document.querySelector('.bground .close'), document.querySelector('.bground'));\n    // Events de vérification sur les champs des formulaires\n    EventService.handleInputsFormClick((e) => checkField(e));\n    //On rend les éléments en arrière-plan inaccessible pour les lecteurs d'écran\n    document.getElementById('section').setAttribute('aria-hidden', 'true')\n}\n\nfunction getValuesForm(e) {\n    e.preventDefault();\n    for (let i = 0; i < document.forms[0].length - 1; i++) {\n        console.log(document.forms[0][i].value)\n    };\n    document.querySelector('.bground').remove()\n}\n\n// Modal Form\n/**\n * Vérification des champs input de la fenêtre modale\n * de contact\n *\n * @param {*} element\n */\nfunction checkField(element) {\n    const regExName = \"[a-zA-Z-s\\u00C0-\\u024F\\u1E00-\\u1EFF]{3,}$\"; // Regex qui vérifie si le champ a plus de 3 caractères, les accents, et espaces des noms composés\n\n    if (element.id === \"first\") {\n        element.pattern = regExName;\n        if (!element.validity.valid) {\n            element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n\n        } else {\n            element.removeAttribute(\"style\");\n        }\n    }\n    if (element.id === \"last\") {\n        element.pattern = regExName;\n        if (!element.validity.valid) {\n            element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n\n        } else {\n            element.removeAttribute(\"style\");\n        }\n    }\n    if (element.id === \"email\") {\n        element.pattern = \"[a-z0-9-_]+[a-z0-9.-_]*@[a-z0-9-_]{2,}.[a-z.-_]+[a-z-_]+\"; // Regex qui vérifie si le champ a un email valide\n        if (!element.validity.valid) {\n            element.setAttribute(\"style\", \"border:2px solid red; outline:none\");\n\n        } else {\n            element.removeAttribute(\"style\");\n        }\n    }\n}\n\n\n// Controller\n\nconst mainPhotographer = async () => {\n    try {\n        const dataService = new DataService();\n        // On récupère l'ensemble des photographes du Json\n        dataService.loadPhotographers();\n        // On récupère l'ensemble des médias des photographes du Json\n        dataService.loadMedias();\n\n        // On display le photographe avec ses infos grâce à son id récupéré dans l'url\n        const paramsFromUrl = new URLSearchParams(document.location.search.substring(1));\n        const idFromUrlParams = Number(paramsFromUrl.get(\"id\"));\n        const nameOfPhotographer = dataService.getPhotographerById(idFromUrlParams).name;\n        const firstNameOfPhotographer = nameOfPhotographer.slice(0, nameOfPhotographer.indexOf(' '));\n        const medias = dataService.getMediasByPhotographerId(idFromUrlParams);\n        displayPhotographerInfos(dataService.getPhotographerById(idFromUrlParams), dataService.getTotalOfLikes(idFromUrlParams));\n        // On ajoute les events sur les tags qui renvoients sur la page index\n        eventOnTags();\n        // Event sur bouton contact\n        document.querySelector('.photographerHeader .button').addEventListener('click', () => eventDisplayModalForm(nameOfPhotographer));\n        //On affiche le bouton de filtre\n        displayFilterButton();\n        const chevronElement = document.querySelector(\".dropdown-toggle .fas\");\n        EventService.toggleDropdownButton(chevronElement);\n        // Filtres\n        EventService.handleMediasFilter((element) => filterMediasOnDropdownButton(element, dataService, idFromUrlParams, firstNameOfPhotographer, medias));\n        //On affiche les médias du photographes\n        document.querySelector(\".medias\").appendChild(new ViewMedias(medias, firstNameOfPhotographer).render());\n        //On ajoute l'événement sur chaque image pour afficher la lightbox\n        eventOpenLightboxOnMediasElements(medias, firstNameOfPhotographer)\n        // On ajoute un événement au scroll de window pour afficher un bouton scroll to top\n        window.addEventListener('scroll', () => EventScrollToTop.scrollToTop(document.querySelector('.scrollToMainButton')));\n        // On ajoute le nom du photographe au titre\n        document.title = `Fisheye | ${nameOfPhotographer}`;\n\n\n    } catch (error) {\n\n        console.error(error)\n\n    }\n};\nmainPhotographer();","import MediaFactory from \"./MediaFactory\";\n\nexport default class ViewMedias {\n    constructor(medias, firstNameOfPhotographer) {\n        this.medias = medias;\n        this.firstNameOfPhotographer = firstNameOfPhotographer\n    }\n\n    render() {\n        const element = document.createElement(\"div\");\n        element.classList.add('container')\n        element.innerHTML = this.toString();\n        return element;\n    }\n\n    toString() {\n        return `\n            ${this.medias.map(({ image, video, title, likes, id }) => `\n            <figure class=\"content-media\">\n                <div class=\"content-media__media\">\n                    ${new MediaFactory({ image, video, id, title }, this.firstNameOfPhotographer).create().toString()}\n                </div>\n                <figcaption class=\"content-media__figcaption\">\n                    <span class=\"content-media__title\">${title}</span>\n                    <span>${likes} </span><span class=\"fas fa-heart\"></span>\n                </figcaption>\n            </figure>\n        `).join(\"\")}\n    `\n    }\n}\n","import ViewVideo from \"./ViewVideo\";\nimport ViewPicture from \"./ViewPicture\";\n\nexport default class MediaFactory {\n    constructor(media, firstName) {\n        this.media = media;\n        this.firstName = firstName\n    }\n\n    create() {\n\n        if (this.media.video) {\n            return new ViewVideo({ name: this.media.video, id: this.media.id, firstName: this.firstName, title: this.media.title })\n        } else {\n            return new ViewPicture({ name: this.media.image, id: this.media.id, firstName: this.firstName, title: this.media.title })\n        }\n\n    }\n}","/**\n *\n *\n * @export\n * @class ViewVideo\n */\nexport default class ViewVideo {\n    constructor({ name, id, firstName, title }) {\n        this.id = id\n        this.name = name\n        this.firstName = firstName\n        this.title = title\n    }\n    toString() {\n        return `\n        <video tabindex=\"0\" controls id=\"${this.id}\" class=\"video media\" alt=\"${this.title}\">\n            <source src=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\" type=\"video/mp4\">\n            <p>Votre navigateur ne supporte pas la vidéo HTML5. Voici à la place <a href=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\">le lien vers la vidéo</a>.</p>\n        </video>`\n    }\n}","import ViewMedias from \"./ViewMedias\";\n\nexport default class ViewPictures {\n    constructor({ name, id, firstName, title }) {\n        this.id = id\n        this.name = name\n        this.firstName = firstName\n        this.title = title\n    }\n    toString() {\n        return `\n        <img tabindex=\"0\" id=\"${this.id}\" alt=\"${this.title}\" class=\"image media\" src=\"./assets/images/Sample_Photos/${this.firstName}/${this.name}\">`\n    }\n}","import MediaFactory from './MediaFactory';\n\n/**\n * @property {HTMLElement} element\n * @property {string} imageTitle\n * @property {string[]} images\n * @property {string} url Current image displayed\n * @export\n * @class Lightbox\n */\nexport default class Lightbox {\n    constructor(medias, firstNameOfPhotographer) {\n        this.medias = medias\n        this.path = firstNameOfPhotographer\n        this.index = 0\n        document.addEventListener('keyup', this.onKeyUp)\n        this.current = this.getCurrentMedia()\n    }\n\n    open(key) {\n        this.index = key\n        this.display()\n    }\n\n    close() {\n        const lightboxElement = document.querySelector('.lightbox-bg');\n        lightboxElement.classList.add('fadeout')\n        if (lightboxElement) {\n            window.setTimeout(() => {\n                lightboxElement.remove()\n            }, 500)\n        }\n    }\n\n    next() {\n        this.index += 1\n        if (this.index === this.medias.length) {\n            this.index = 0\n        }\n        this.display()\n    }\n\n    prev() {\n        this.index -= 1\n        if (this.index === -1) {\n            this.index = this.medias.length - 1\n        }\n        this.display()\n    }\n\n    getCurrentMedia() {\n        return this.medias[this.index]\n    }\n\n    display() {\n        const current = this.getCurrentMedia()\n        let element = document.querySelector('.lightbox-bg')\n        if (!element) {\n            element = document.createElement('div')\n            element.classList.add('lightbox-bg')\n            document.body.appendChild(element)\n            // Événements au clavier\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'ArrowRight') {\n                    this.next()\n                }\n            })\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'ArrowLeft') {\n                    this.prev()\n                }\n            })\n            document.body.addEventListener('keyup', (evt) => {\n                if (evt.key === 'Escape') {\n                    this.close()\n                }\n            })\n        }\n        element.innerHTML = `\n        <div role=\"dialog\" class=\"lightbox\" aria-label=\"image closeup view\">\n            <button aria-label=\"Close dialog\" class=\"lightbox__close\"></button>\n            <button aria-label=\"Next image\" class=\"lightbox__next\"></button>\n            <button aria-label=\"Previous image\" class=\"lightbox__prev\"></button>\n            <div class=\"lightbox__container\">\n                <figure>\n                    <div class=\"media\">\n                    ${new MediaFactory(current, this.path).create().toString()}\n                    </div>\n                    <figcaption>${current.title}</figcaption>\n                </figure>\n            </div>\n        </div >`\n\n        element.querySelector('.lightbox__next').addEventListener('click', this.next.bind(this))\n        element.querySelector('.lightbox__prev').addEventListener('click', this.prev.bind(this))\n        element.querySelector('.lightbox__close').addEventListener('click', this.close.bind(this))\n\n        //Set height of lightbox\n        element.setAttribute('height', window.innerHeight)\n\n    }\n}"],"names":["$2a04708b7882a578$var$_DataService","$2a04708b7882a578$var$_interopRequireDefault","parcelRequire","$2a04708b7882a578$var$_EventService","$9b2d66673e67e23f$var$_MediaFactory","render","element","document","createElement","classList","add","innerHTML","this","toString","concat","medias","map","_ref","image","video","title","likes","id","MediaFactory","firstNameOfPhotographer","create","join","$462d22de1319e5d7$var$_ViewVideo","$462d22de1319e5d7$var$_interopRequireDefault","$462d22de1319e5d7$var$_ViewPicture","media","ViewVideo","name","firstName","ViewPicture","$2a04708b7882a578$var$_ViewMedias","$3a53bc5331f41395$var$_MediaFactory","open","key","index","display","close","lightboxElement","querySelector","window","setTimeout","remove","next","length","prev","getCurrentMedia","current","body","appendChild","addEventListener","evt","path","bind","setAttribute","innerHeight","onKeyUp","$2a04708b7882a578$var$_Lightbox","$2a04708b7882a578$var$_EventScrollToTop","displayModalForm","div","className","getElementById","e","preventDefault","i","forms","console","log","value","getValuesForm","focus","eventOpenLightboxOnMediasElements","lightbox","Lightbox","mediasElements","Array","from","querySelectorAll","forEach","findIndex","currentTarget","getAttribute","async","dataService","DataService","loadPhotographers","loadMedias","paramsFromUrl","URLSearchParams","location","search","substring","idFromUrlParams","Number","get","nameOfPhotographer","getPhotographerById","slice","indexOf","getMediasByPhotographerId","photographer","totalLikes","getTotalOfLikes","country","city","tagline","tags","tag","price","portrait","EventService","handleTagClick","nameAttributeOfTag","url","URL","href","closeModal","handleInputsFormClick","regExName","pattern","validity","valid","removeAttribute","checkField","eventDisplayModalForm","chevronElement","toggleDropdownButton","handleMediasFilter","textContent","trim","ViewMedias","getMediasPhotographerByPopularity","getMediasPhotographerByDate","getMediasPhotographerByTitle","filterMediasOnDropdownButton","EventScrollToTop","scrollToTop","error","mainPhotographer"],"version":3,"file":"photographer.6a795622.js.map"}